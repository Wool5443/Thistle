AST ::= G
G ::= function+

if ::= 'if' expression {body|else}
else ::= 'else' body

function ::= 'fn' function_signature {body | ';'}
function_signature ::= name '(' function_signature_args? ')'
function_signature_args ::= name_type {',' name_type}*
body ::= '{' statement* '}'

statement ::= {expression | return_statement} ';'

function_call ::= name '(' function_call_args? ')'
function_call_args ::= expression {',' expression}*

return_statement ::= 'return' expression?

expression ::= math_expression |
               assign_expression |
               function_call |
               string

assign_expression ::= 'let' {name_type | name} {'=' expression}?

math_expression ::= X
X ::= X {'xor' X}*
O ::= EQ {'or' E}*
EQ ::= A '==' A | A
A ::= E {'and' E}*
E ::= T {['+', '-']T}*
T ::= D {['*', '/']D}*
D ::= P {'^'P}*
P ::= '-' P | '!' P | '(' expression ')' | identifier

identifier ::= number | name
name_type ::= name ':' name
name ::= [A-Za-z_][A-Za-z_0-9]*
string ::= '"' any '"'
number ::= strtol
